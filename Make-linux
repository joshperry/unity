#
# build tools
#
AR        = /usr/bin/ar cru
CD        = cd
CXX       = /usr/bin/g++
ECHO      = echo
LD        = /usr/bin/ld
MKDIR     = /bin/mkdir
RM        = /bin/rm -f
RMR       = /bin/rm -rf

#
# compiler options
#
GCXXDEFS  = -D_XOPEN_SOURCE=600
GCXXINCS  = -I$(DEPTH)/include -I/usr/X11R6/include
GCXXOPTS  = -Wall -W -fexceptions
CXXOPTIMIZER = -g
#CXXOPTIMIZER = -O2 -DNDEBUG

#
# linker options
#
GLDLIBS	  = -L/usr/X11R6/lib -lX11 -lXext -lXtst
GLDOPTS	  = -L$(LIBDIR)

#
# binary stuff
#
BINTARGET = $(BINDIR)/$(TARGET)

#
# library stuff
#
LIBTARGET = $(LIBDIR)/lib$(TARGET).a

#
# dependency generation stuff
#
MKDEP     = $(DEPTH)/tools/depconv
MKDEPOPT  = -MD
MKDEPPRE  =
MKDEPPOST = $(MKDEP) -f $(MKDEPFILE) $*.d; $(RM) $*.d
MKDEPFILE = .depend

#
# stuff to clean
#
DIRT      = $(_FORCE) $(LDIRT) $(GDIRT)
GDIRT     = *.[eoud] a.out core ar.tmp.* $(MKDEPFILE)

#
# Rule macros for nonterminal makefiles that iterate over subdirectories,
# making the current target.  Set SUBDIRS to the relevant list of kids.
#
# Set NOSUBMESG to any value to suppress a warning that subdirectories 
# are not present.
#
SUBDIR_MAKERULE= \
	if test ! -d $$d; then \
		if test "$(NOSUBMESG)" = "" ; then \
			${ECHO} "SKIPPING $$d: No such directory."; \
		fi \
	else \
		${ECHO} "${CD} $$d; $(MAKE) $${RULE:=$@}"; \
		(${CD} $$d; ${MAKE} $${RULE:=$@}); \
	fi

SUBDIRS_MAKERULE= \
	@for d in $(SUBDIRS); do $(SUBDIR_MAKERULE); done
